//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/2023_01_28_JoystickToRCUDP/LocalDroneInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace LocalDroneInputSpace
{
    public partial class @LocalDroneInputUtility: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @LocalDroneInputUtility()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""LocalDroneInput"",
    ""maps"": [
        {
            ""name"": ""LocalDroneInput"",
            ""id"": ""915cc0d5-142b-480b-b61f-e4e3633ff3bd"",
            ""actions"": [
                {
                    ""name"": ""LeftRight"",
                    ""type"": ""Value"",
                    ""id"": ""9681e789-821f-4d15-940d-123a89e3ad7b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BackForward"",
                    ""type"": ""Value"",
                    ""id"": ""2b89ad1d-77b8-43a2-935c-67a458f5172a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DownUp"",
                    ""type"": ""Value"",
                    ""id"": ""6e041d7a-c62f-474f-b8e8-d3e2046ae36e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateLeftRight"",
                    ""type"": ""Value"",
                    ""id"": ""764fe8e1-0390-487a-9868-5eb33a88283f"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""e63fd90e-1466-43a5-9d4a-5095ead9a8b6"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftRight"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4cd2acb8-6b6c-4a3e-b7b1-4e0c2aa2b71d"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""524320a0-1984-43e3-ae08-f2b3029b36a2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""793bb095-81cc-4ac0-ad6d-d8154b4e83d1"",
                    ""path"": ""<XInputController>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""b495a49a-c1c6-4413-b759-dbf50906da48"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackForward"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c74a54dc-f95d-41c7-aa21-f379900c30d2"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""4ec2d01d-f3d4-4342-9542-baa0595b2103"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b36a3f4e-3b6a-4417-9c5f-518ce64979fb"",
                    ""path"": ""<XInputController>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""2d557b10-dca4-44a3-94c7-f5b84a7ebb59"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DownUp"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e74c1d68-ab7a-4898-8d9b-57fb7b0fd8de"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DownUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""a73f5ffc-e440-479d-96f7-84694fabbb09"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DownUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8977130d-227c-4bf6-9766-504ca9e5f391"",
                    ""path"": ""<XInputController>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DownUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""4055455d-d7e9-4e92-a348-c76aa381e996"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateLeftRight"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""0b9ad99d-ca9b-4bb3-8958-df7f8a62865b"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateLeftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8de6ba9f-0613-4354-b5c9-41c8d8c895b6"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateLeftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b615f4eb-14e1-4f1f-8bce-68e8dbd17e2c"",
                    ""path"": ""<XInputController>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateLeftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bd3464c-a6ec-4449-bd30-0834f8370b25"",
                    ""path"": ""<XRController>{LeftHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateLeftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // LocalDroneInput
            m_LocalDroneInput = asset.FindActionMap("LocalDroneInput", throwIfNotFound: true);
            m_LocalDroneInput_LeftRight = m_LocalDroneInput.FindAction("LeftRight", throwIfNotFound: true);
            m_LocalDroneInput_BackForward = m_LocalDroneInput.FindAction("BackForward", throwIfNotFound: true);
            m_LocalDroneInput_DownUp = m_LocalDroneInput.FindAction("DownUp", throwIfNotFound: true);
            m_LocalDroneInput_RotateLeftRight = m_LocalDroneInput.FindAction("RotateLeftRight", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // LocalDroneInput
        private readonly InputActionMap m_LocalDroneInput;
        private List<ILocalDroneInputActions> m_LocalDroneInputActionsCallbackInterfaces = new List<ILocalDroneInputActions>();
        private readonly InputAction m_LocalDroneInput_LeftRight;
        private readonly InputAction m_LocalDroneInput_BackForward;
        private readonly InputAction m_LocalDroneInput_DownUp;
        private readonly InputAction m_LocalDroneInput_RotateLeftRight;
        public struct LocalDroneInputActions
        {
            private @LocalDroneInputUtility m_Wrapper;
            public LocalDroneInputActions(@LocalDroneInputUtility wrapper) { m_Wrapper = wrapper; }
            public InputAction @LeftRight => m_Wrapper.m_LocalDroneInput_LeftRight;
            public InputAction @BackForward => m_Wrapper.m_LocalDroneInput_BackForward;
            public InputAction @DownUp => m_Wrapper.m_LocalDroneInput_DownUp;
            public InputAction @RotateLeftRight => m_Wrapper.m_LocalDroneInput_RotateLeftRight;
            public InputActionMap Get() { return m_Wrapper.m_LocalDroneInput; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(LocalDroneInputActions set) { return set.Get(); }
            public void AddCallbacks(ILocalDroneInputActions instance)
            {
                if (instance == null || m_Wrapper.m_LocalDroneInputActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_LocalDroneInputActionsCallbackInterfaces.Add(instance);
                @LeftRight.started += instance.OnLeftRight;
                @LeftRight.performed += instance.OnLeftRight;
                @LeftRight.canceled += instance.OnLeftRight;
                @BackForward.started += instance.OnBackForward;
                @BackForward.performed += instance.OnBackForward;
                @BackForward.canceled += instance.OnBackForward;
                @DownUp.started += instance.OnDownUp;
                @DownUp.performed += instance.OnDownUp;
                @DownUp.canceled += instance.OnDownUp;
                @RotateLeftRight.started += instance.OnRotateLeftRight;
                @RotateLeftRight.performed += instance.OnRotateLeftRight;
                @RotateLeftRight.canceled += instance.OnRotateLeftRight;
            }

            private void UnregisterCallbacks(ILocalDroneInputActions instance)
            {
                @LeftRight.started -= instance.OnLeftRight;
                @LeftRight.performed -= instance.OnLeftRight;
                @LeftRight.canceled -= instance.OnLeftRight;
                @BackForward.started -= instance.OnBackForward;
                @BackForward.performed -= instance.OnBackForward;
                @BackForward.canceled -= instance.OnBackForward;
                @DownUp.started -= instance.OnDownUp;
                @DownUp.performed -= instance.OnDownUp;
                @DownUp.canceled -= instance.OnDownUp;
                @RotateLeftRight.started -= instance.OnRotateLeftRight;
                @RotateLeftRight.performed -= instance.OnRotateLeftRight;
                @RotateLeftRight.canceled -= instance.OnRotateLeftRight;
            }

            public void RemoveCallbacks(ILocalDroneInputActions instance)
            {
                if (m_Wrapper.m_LocalDroneInputActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(ILocalDroneInputActions instance)
            {
                foreach (var item in m_Wrapper.m_LocalDroneInputActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_LocalDroneInputActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public LocalDroneInputActions @LocalDroneInput => new LocalDroneInputActions(this);
        public interface ILocalDroneInputActions
        {
            void OnLeftRight(InputAction.CallbackContext context);
            void OnBackForward(InputAction.CallbackContext context);
            void OnDownUp(InputAction.CallbackContext context);
            void OnRotateLeftRight(InputAction.CallbackContext context);
        }
    }
}
