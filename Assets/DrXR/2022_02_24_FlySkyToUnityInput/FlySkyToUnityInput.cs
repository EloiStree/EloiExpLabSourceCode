//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/DrXR/2022_02_24_FlySkyToUnityInput/FlySkyToUnityInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @FlySkyToUnityInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @FlySkyToUnityInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""FlySkyToUnityInput"",
    ""maps"": [
        {
            ""name"": ""DroneClassic"",
            ""id"": ""df205ff1-3b3c-4642-aa23-fa3978290501"",
            ""actions"": [
                {
                    ""name"": ""ArmedSwitchOn"",
                    ""type"": ""Button"",
                    ""id"": ""51c8f77d-bed4-49ad-96ba-801680597cc6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KillSwitchOn"",
                    ""type"": ""Button"",
                    ""id"": ""a56dc69d-bdd3-42f9-919f-0e11b9de1d2d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RollLeftRight"",
                    ""type"": ""Value"",
                    ""id"": ""3ef940b8-7fbf-4ce8-bf95-d3982b9d8b7a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PitchBackFront"",
                    ""type"": ""Value"",
                    ""id"": ""9abde82c-8b26-4b1f-8161-ae9e7f833229"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThrottleDownUp"",
                    ""type"": ""Value"",
                    ""id"": ""727533eb-ff95-46a6-9122-00c1e6fe8d09"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""YawLeftRightRotation"",
                    ""type"": ""Value"",
                    ""id"": ""966194ef-4ce5-4625-951c-72e51caa1e0e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d5ac07e9-e160-4b0f-a68d-f2f0dba1f2d9"",
                    ""path"": ""<HID::Flysky Flysky FS-i6XCN>/button3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArmedSwitchOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71da735b-ddac-4ed8-a0c0-ce86d3af1eef"",
                    ""path"": ""<HID::Flysky Flysky FS-i6XCN>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KillSwitchOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8738a130-a517-4b54-9706-0ea9a6a1746a"",
                    ""path"": ""<HID::Flysky Flysky FS-i6XCN>/stick/x"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""RollLeftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88dbf398-51f0-4c08-b528-d0469fcbf345"",
                    ""path"": ""<HID::Flysky Flysky FS-i6XCN>/stick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PitchBackFront"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63e9da95-a4d6-4654-8c62-e04c072ccb7c"",
                    ""path"": ""<HID::Flysky Flysky FS-i6XCN>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrottleDownUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f7dfda3-e394-4df0-b3ad-73d2e2e2edaa"",
                    ""path"": ""<HID::Flysky Flysky FS-i6XCN>/rx"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""YawLeftRightRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // DroneClassic
        m_DroneClassic = asset.FindActionMap("DroneClassic", throwIfNotFound: true);
        m_DroneClassic_ArmedSwitchOn = m_DroneClassic.FindAction("ArmedSwitchOn", throwIfNotFound: true);
        m_DroneClassic_KillSwitchOn = m_DroneClassic.FindAction("KillSwitchOn", throwIfNotFound: true);
        m_DroneClassic_RollLeftRight = m_DroneClassic.FindAction("RollLeftRight", throwIfNotFound: true);
        m_DroneClassic_PitchBackFront = m_DroneClassic.FindAction("PitchBackFront", throwIfNotFound: true);
        m_DroneClassic_ThrottleDownUp = m_DroneClassic.FindAction("ThrottleDownUp", throwIfNotFound: true);
        m_DroneClassic_YawLeftRightRotation = m_DroneClassic.FindAction("YawLeftRightRotation", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // DroneClassic
    private readonly InputActionMap m_DroneClassic;
    private List<IDroneClassicActions> m_DroneClassicActionsCallbackInterfaces = new List<IDroneClassicActions>();
    private readonly InputAction m_DroneClassic_ArmedSwitchOn;
    private readonly InputAction m_DroneClassic_KillSwitchOn;
    private readonly InputAction m_DroneClassic_RollLeftRight;
    private readonly InputAction m_DroneClassic_PitchBackFront;
    private readonly InputAction m_DroneClassic_ThrottleDownUp;
    private readonly InputAction m_DroneClassic_YawLeftRightRotation;
    public struct DroneClassicActions
    {
        private @FlySkyToUnityInput m_Wrapper;
        public DroneClassicActions(@FlySkyToUnityInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @ArmedSwitchOn => m_Wrapper.m_DroneClassic_ArmedSwitchOn;
        public InputAction @KillSwitchOn => m_Wrapper.m_DroneClassic_KillSwitchOn;
        public InputAction @RollLeftRight => m_Wrapper.m_DroneClassic_RollLeftRight;
        public InputAction @PitchBackFront => m_Wrapper.m_DroneClassic_PitchBackFront;
        public InputAction @ThrottleDownUp => m_Wrapper.m_DroneClassic_ThrottleDownUp;
        public InputAction @YawLeftRightRotation => m_Wrapper.m_DroneClassic_YawLeftRightRotation;
        public InputActionMap Get() { return m_Wrapper.m_DroneClassic; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DroneClassicActions set) { return set.Get(); }
        public void AddCallbacks(IDroneClassicActions instance)
        {
            if (instance == null || m_Wrapper.m_DroneClassicActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DroneClassicActionsCallbackInterfaces.Add(instance);
            @ArmedSwitchOn.started += instance.OnArmedSwitchOn;
            @ArmedSwitchOn.performed += instance.OnArmedSwitchOn;
            @ArmedSwitchOn.canceled += instance.OnArmedSwitchOn;
            @KillSwitchOn.started += instance.OnKillSwitchOn;
            @KillSwitchOn.performed += instance.OnKillSwitchOn;
            @KillSwitchOn.canceled += instance.OnKillSwitchOn;
            @RollLeftRight.started += instance.OnRollLeftRight;
            @RollLeftRight.performed += instance.OnRollLeftRight;
            @RollLeftRight.canceled += instance.OnRollLeftRight;
            @PitchBackFront.started += instance.OnPitchBackFront;
            @PitchBackFront.performed += instance.OnPitchBackFront;
            @PitchBackFront.canceled += instance.OnPitchBackFront;
            @ThrottleDownUp.started += instance.OnThrottleDownUp;
            @ThrottleDownUp.performed += instance.OnThrottleDownUp;
            @ThrottleDownUp.canceled += instance.OnThrottleDownUp;
            @YawLeftRightRotation.started += instance.OnYawLeftRightRotation;
            @YawLeftRightRotation.performed += instance.OnYawLeftRightRotation;
            @YawLeftRightRotation.canceled += instance.OnYawLeftRightRotation;
        }

        private void UnregisterCallbacks(IDroneClassicActions instance)
        {
            @ArmedSwitchOn.started -= instance.OnArmedSwitchOn;
            @ArmedSwitchOn.performed -= instance.OnArmedSwitchOn;
            @ArmedSwitchOn.canceled -= instance.OnArmedSwitchOn;
            @KillSwitchOn.started -= instance.OnKillSwitchOn;
            @KillSwitchOn.performed -= instance.OnKillSwitchOn;
            @KillSwitchOn.canceled -= instance.OnKillSwitchOn;
            @RollLeftRight.started -= instance.OnRollLeftRight;
            @RollLeftRight.performed -= instance.OnRollLeftRight;
            @RollLeftRight.canceled -= instance.OnRollLeftRight;
            @PitchBackFront.started -= instance.OnPitchBackFront;
            @PitchBackFront.performed -= instance.OnPitchBackFront;
            @PitchBackFront.canceled -= instance.OnPitchBackFront;
            @ThrottleDownUp.started -= instance.OnThrottleDownUp;
            @ThrottleDownUp.performed -= instance.OnThrottleDownUp;
            @ThrottleDownUp.canceled -= instance.OnThrottleDownUp;
            @YawLeftRightRotation.started -= instance.OnYawLeftRightRotation;
            @YawLeftRightRotation.performed -= instance.OnYawLeftRightRotation;
            @YawLeftRightRotation.canceled -= instance.OnYawLeftRightRotation;
        }

        public void RemoveCallbacks(IDroneClassicActions instance)
        {
            if (m_Wrapper.m_DroneClassicActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDroneClassicActions instance)
        {
            foreach (var item in m_Wrapper.m_DroneClassicActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DroneClassicActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DroneClassicActions @DroneClassic => new DroneClassicActions(this);
    public interface IDroneClassicActions
    {
        void OnArmedSwitchOn(InputAction.CallbackContext context);
        void OnKillSwitchOn(InputAction.CallbackContext context);
        void OnRollLeftRight(InputAction.CallbackContext context);
        void OnPitchBackFront(InputAction.CallbackContext context);
        void OnThrottleDownUp(InputAction.CallbackContext context);
        void OnYawLeftRightRotation(InputAction.CallbackContext context);
    }
}
